#!/bin/bash

. "$MBX_LIBPATH/_.bash" || exit 1

read -r -d '' usage << EOF
Usage: $(basename "$0") [OPTIONS]
Upgrades all packages of all supported package managers. Supports:

- apt-get
- brew
- gem
- npm / nvm
- flutter / fvm

OPTIONS
  -V,   --version                 Prints the version of this script suite (MBX).
  -v,   --verbose                 Prints verbose information.
  -r,   --reboot                  Reboots the system after successful upgrade.
  -h,   --help                    Prints this help message.
EOF

while [ "$#" -gt 0 ]; do
	case "$1" in
		-V|--version) echo $MBX_VERSION && exit 0 ;;
		-v|--verbose) verbose=1 ;;
		-r|--reboot) reboot=1 ;;
		-h|--help) echo "$usage" && exit 0 ;;
		*) echo "[x] Invalid command line flag $1." >&2; exit 1 ;;
	esac
	shift
done

test $verbose && trap 'echo "[$] $BASH_COMMAND"' DEBUG
set -e

if test-command sudo; then
	sudo echo "[i] Requested root permissions for priviledged tasks."
fi

if test-command apt-get; then
	echo "[o] Upgrading APT packages ..."
	if test-command sudo; then
		sudo apt-get update
		sudo apt-get dist-upgrade -y
		sudo apt-get autoremove -y
		sudo apt-get clean
	else
		apt-get update
		apt-get dist-upgrade -y
		apt-get autoremove -y
		apt-get clean
	fi
fi

if test-command brew; then
	echo "[o] Upgrading Homebrew packages ..."
	brew update
	brew upgrade
	brew upgrade --cask
	brew autoremove
	brew cleanup
fi

if test-command gem; then
	echo "[o] Upgrading global Ruby gems ..."
	if test-command sudo; then
		sudo gem update --system
	else
		gem update --system
	fi
fi

if [ -s "$HOME/.nvm/nvm.sh" ]; then
	\. "$NVM_DIR/nvm.sh" # ensure nvm is loaded
fi

if test-command npm; then
	if test-command nvm; then
		echo "[o] Upgrading node (minor) ..."
		nvm install $(nvm current | sed -rn "s/v([[:digit:]]+).*/\1/p") --reinstall-packages-from=$(nvm current) || true
		nvm install $(nvm current) # upgrade default-packages to major version
		# TODO: Replace last command with better alternative, see https://github.com/npm/cli/issues/2329#issuecomment-743308323
	else
		echo "[x] nvm script found, but unable to load nvm!"
		exit 1
	fi
	npm_global_packages=($(npm list -g --depth 0 | awk '/ /{print $2}'))
	echo "[o] Upgrading global npm packages (minor) ..."
	for val in "${npm_global_packages[@]}"; do
		npm i -g --force $(echo $val | tr "." "\n" | head -1)
	done
fi

if test-command fvm; then
	echo "[o] Upgrading Flutter ..."
	fvm global beta
	fvm flutter upgrade
	fvm global stable
	fvm flutter upgrade
elif test-command flutter; then
	echo "[o] Upgrading Flutter ..."
	flutter upgrade
fi

if [ $reboot ]; then
	echo "[o] Rebooting ..."
	if test-command sudo; then
		sudo reboot
	else
		reboot
	fi
fi

set +e && trap - DEBUG && echo "[o] Done!"

